#include <iostream>
#include <cmath>
using namespace std;

class Point2D {
private:
    double x;
    double y;
public:
    Point2D(double xCoord = 0, double yCoord = 0) : x(xCoord), y(yCoord) {}
    double layX() const { return x; }
    double layY() const { return y; }
    void hienThi() const {
        cout << "(" << x << ", " << y << ")";
    }
    float khoangCach(const Point2D& other) const {
        double dx = other.x - x;
        double dy = other.y - y;
        return sqrt(dx * dx + dy * dy);
    }
};

class TamGiac {
private:
    Point2D A; // Đỉnh A
    Point2D B; // Đỉnh B
    Point2D C; // Đỉnh C
    bool hopLe; // Biến kiểm tra tam giác có hợp lệ không

    // Hàm kiểm tra tam giác hợp lệ
    bool kiemTraHopLe() const {
        float AB = A.khoangCach(B);
        float BC = B.khoangCach(C);
        float CA = C.khoangCach(A);
        float p = (AB + BC + CA) / 2;
        float dienTich = sqrt(p * (p - AB) * (p - BC) * (p - CA));
        return dienTich > 0; // Tam giác hợp lệ nếu diện tích > 0
    }

public:
    // Phương thức thiết lập
    TamGiac(double x1, double y1, double x2, double y2, double x3, double y3) 
        : A(x1, y1), B(x2, y2), C(x3, y3) {
        hopLe = kiemTraHopLe();
        if (hopLe) {
            cout << "Da tao mot tam giac moi.\n";
        } else {
            cout << "Ba diem thang hang, khong tao duoc tam giac.\n";
        }
    }

    // Phương thức hủy
    ~TamGiac() {
        if (hopLe) {
            cout << "Da huy tam giac.\n";
        }
    }

    // Hàm set() để xác định tam giác
    void set(int x1, int y1, int x2, int y2, int x3, int y3) {
        A = Point2D(x1, y1);
        B = Point2D(x2, y2);
        C = Point2D(x3, y3);
        hopLe = kiemTraHopLe();
        if (!hopLe) {
            cout << "Ba diem thang hang, khong tao duoc tam giac.\n";
        }
    }

    // Hàm tính chu vi tam giác
    float tinhChuVi() const {
        if (!hopLe) {
            cout << "Tam giac khong hop le, khong the tinh chu vi.\n";
            return 0;
        }
        float AB = A.khoangCach(B);
        float BC = B.khoangCach(C);
        float CA = C.khoangCach(A);
        return AB + BC + CA;
    }

    // Hàm tính diện tích tam giác (sử dụng công thức Heron)
    float tinhDienTich() const {
        if (!hopLe) {
            cout << "Tam giac khong hop le, khong the tinh dien tich.\n";
            return 0;
        }
        float AB = A.khoangCach(B);
        float BC = B.khoangCach(C);
        float CA = C.khoangCach(A);
        float p = (AB + BC + CA) / 2;
        return sqrt(p * (p - AB) * (p - BC) * (p - CA));
    }

    // Hàm print() để xuất thông tin tam giác
    void print() const {
        if (!hopLe) {
            cout << "Tam giac khong hop le.\n";
            return;
        }
        cout << "Tam giac: A";
        A.hienThi();
        cout << ", B";
        B.hienThi();
        cout << ", C";
        C.hienThi();
        cout << "\n";
    }

    // Hàm phân loại tam giác
    int phanLoai() const {
        if (!hopLe) {
            return -1; // Không phải tam giác
        }

        float AB = A.khoangCach(B);
        float BC = B.khoangCach(C);
        float CA = C.khoangCach(A);

        // Kiểm tra tam giác vuông (sử dụng định lý Pythagore)
        bool laTamGiacVuong = false;
        float epsilon = 0.0001; // Sai số cho phép
        if (abs(AB * AB + BC * BC - CA * CA) < epsilon ||
            abs(AB * AB + CA * CA - BC * BC) < epsilon ||
            abs(BC * BC + CA * CA - AB * AB) < epsilon) {
            laTamGiacVuong = true;
        }

        // Kiểm tra tam giác đều và tam giác cân
        bool laTamGiacDeu = (abs(AB - BC) < epsilon && abs(BC - CA) < epsilon);
        bool laTamGiacCan = (abs(AB - BC) < epsilon || abs(BC - CA) < epsilon || abs(CA - AB) < epsilon);

        // Phân loại tam giác
        if (laTamGiacVuong && laTamGiacCan) {
            return 4; // Tam giác vuông cân
        } else if (laTamGiacVuong) {
            return 3; // Tam giác vuông
        } else if (laTamGiacDeu) {
            return 1; // Tam giác đều
        } else if (laTamGiacCan) {
            return 2; // Tam giác cân
        } else {
            return 0; // Tam giác thường
        }
    }

    // Hàm xuất loại tam giác
    void xuatPhanLoai() const {
        if (!hopLe) {
            cout << "Khong phai tam giac.\n";
            return;
        }

        float AB = A.khoangCach(B);
        float BC = B.khoangCach(C);
        float CA = C.khoangCach(A);
        int loai = phanLoai();

        switch (loai) {
            case 0:
                cout << "Tam giac thuong.\n";
                break;
            case 1:
                cout << "Tam giac deu (cac canh: " << AB << ").\n";
                break;
            case 2:
                cout << "Tam giac can (";
                if (abs(AB - BC) < 0.0001) cout << "AB = BC = " << AB;
                else if (abs(BC - CA) < 0.0001) cout << "BC = CA = " << BC;
                else cout << "CA = AB = " << CA;
                cout << ").\n";
                break;
            case 3:
                cout << "Tam giac vuong (goc vuong tai ";
                if (abs(AB * AB + BC * BC - CA * CA) < 0.0001) cout << "C";
                else if (abs(AB * AB + CA * CA - BC * BC) < 0.0001) cout << "B";
                else cout << "A";
                cout << ").\n";
                break;
            case 4:
                cout << "Tam giac vuong can (goc vuong tai ";
                if (abs(AB * AB + BC * BC - CA * CA) < 0.0001) cout << "C";
                else if (abs(AB * AB + CA * CA - BC * BC) < 0.0001) cout << "B";
                else cout << "A";
                cout << ", canh bang nhau: ";
                if (abs(AB - BC) < 0.0001) cout << "AB = BC = " << AB;
                else if (abs(BC - CA) < 0.0001) cout << "BC = CA = " << BC;
                else cout << "CA = AB = " << CA;
                cout << ").\n";
                break;
        }
    }
};

int main() {
    double x1, y1, x2, y2, x3, y3;
    
    // Nhập tọa độ từ người dùng
    cout << "Nhap toa do diem A (x y): ";
    cin >> x1 >> y1;
    cout << "Nhap toa do diem B (x y): ";
    cin >> x2 >> y2;
    cout << "Nhap toa do diem C (x y): ";
    cin >> x3 >> y3;

    // Khởi tạo tam giác
    TamGiac tamGiac(x1, y1, x2, y2, x3, y3);
    
    // Xuất thông tin tam giác
    tamGiac.print();
    
    // Tính và xuất chu vi tam giác
    cout << "Chu vi tam giac: " << tamGiac.tinhChuVi() << "\n";
    
    // Tính và xuất diện tích tam giác
    cout << "Dien tich tam giac: " << tamGiac.tinhDienTich() << "\n";
    
    // Phân loại tam giác
    tamGiac.xuatPhanLoai();

    // Nhập tọa độ mới để set lại tam giác
    cout << "\nNhap toa do moi de set lai tam giac:\n";
    cout << "Nhap toa do diem A (x y): ";
    cin >> x1 >> y1;
    cout << "Nhap toa do diem B (x y): ";
    cin >> x2 >> y2;
    cout << "Nhap toa do diem C (x y): ";
    cin >> x3 >> y3;

    tamGiac.set(x1, y1, x2, y2, x3, y3);
    cout << "\nSau khi set lai:\n";
    tamGiac.print();
    cout << "Chu vi tam giac: " << tamGiac.tinhChuVi() << "\n";
    cout << "Dien tich tam giac: " << tamGiac.tinhDienTich() << "\n";
    tamGiac.xuatPhanLoai();

    return 0;
}
